---
import FormattedDate from "@components/FormattedDate.astro";
import { type CollectionEntry, getCollection } from "astro:content";

export interface Props {
  take?: number;
}

const posts = (await getCollection("posts")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const { take = posts.length } = Astro.props;
type Post = CollectionEntry<"posts">
---

<div class="divide-y divide-solid divide-neutral-700">
  {
    posts.slice(0, take).map((post: Post) => (
      <div class="py-6 first:pt-0 last:pb-0 flex flex-col md:flex-row gap-3">
        <div class="basis-1/4">
          <FormattedDate class="text-neutral-200" date={post.data.pubDate} />
          <div class="flex flex-wrap gap-4">
            {post.data.tags.map((t: string) => <span>{t}</span>)}
          </div>
        </div>
        <div class="basis-3/4">
          <a
          href={`/posts/${post.slug}`}
          class="block space-y-4">
            <span class="link w-fit">{post.data.title}</span>
            <p class="my-0 line-clamp-2">{post.data.description}</p>
          </a>
        </div>
      </div>
    ))
  }
</div>

{ take === undefined &&
<div class="mt-4">
  <a href="/posts" class="link">See more >></a>
</div>
}
